<%-include('header.ejs')%>
    <!-- 여기서부터 -->

    <h1>Socket.io Chat</h1>
    <input id="messageInput" type="text" placeholder="Type a message..." />
    <button id="sendButton">Send</button>
    <ul id="messages"></ul>

    <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
    <script>
        const socket = io();

        // 메시지 수신 처리
        socket.on('message', (msg) => {
            const li = document.createElement('li');
            li.textContent = msg;
            document.getElementById('messages').appendChild(li);
        });

        // 버튼 클릭 시 메시지 전송
        document.getElementById('sendButton').addEventListener('click', () => {
            const input = document.getElementById('messageInput');
            const message = input.value;
            socket.emit('message', message);
            input.value = '';
        });
    </script>
    <!-- <select id="chatroom">
        <option value="test_1">채팅방1</option>
        <option value="test_2">채팅방2</option>
        <option value="test_3">채팅방3</option>
    </select>
    <br>
    <input id="userid" type="text" placeholder="아이디">
    <br>
    <input id="message" type="text" placeholder="내용">
    <button onClick="sendMessage()">전송</button>
    <div id="chatlog"></div>

    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>
        console.log(window.location)
        const baseUrl = window.location.origin;
        const selectedRoom = document.getElementById('chatroom');
        const inputID = document.getElementById('userid');
        const inputMessage = document.getElementById('message');
        const chatLog = document.getElementById("chatlog");
        let lastUserId = null;

        // Socket.IO 클라이언트 연결
        const socket = io();

        // 선택창
        selectedRoom.addEventListener('change', function (event) {
            const roomValue = event.target.value;
            loadchat(roomValue);
        });

        // 엔터키
        inputMessage.addEventListener('keypress', function (event) {
            if (event.key === 'Enter' && inputMessage.value) {
                event.preventDefault();
                sendMessage();
            }
        });

        // 메세지 전송
        function sendMessage() {
            const userid = inputID.value.trim();
            const message = inputMessage.value.trim();
            const jsonMessage = { "id": userid, "message": message };
            socket.emit('message', JSON.stringify(jsonMessage));
            inputMessage.value = '';
        }

        // 메세지 수신
        socket.on('message', (data) => {
            try {
                const receivedData = JSON.parse(data); // event.data 대신 data 사용
                receiveMessage(receivedData);
            } catch (error) {
                console.error("Wrong Format"); // 'Worng Format' 오타 수정
            }
        });

        // 기타 기능
        function receiveMessage(data) {
            updateChatLog(chatLog, data);
            lastUserId = data.id;
        }

        function updateChatLog(chatLog, data) {
            let fieldset;

            if (lastUserId === data.id) {
                fieldset = document.getElementById(`fieldset-${data.id}`);
            } else {
                fieldset = document.createElement("fieldset");
                fieldset.id = `fieldset-${data.id}`;

                const legend = document.createElement("legend");
                legend.textContent = `${data.id}`;
                fieldset.appendChild(legend);

                chatLog.appendChild(fieldset);
            }

            const chat = document.createElement("div");
            const messageText = `${data.message}`;
            const message = document.createTextNode(messageText);

            chat.appendChild(message);
            fieldset.appendChild(chat);
        }
    </script> -->

    <!-- 여기까지 -->
    <%-include('footer.ejs')%>