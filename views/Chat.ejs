<%-include('header.ejs')%>
    <!-- 여기서부터 -->

    <select id="chatroom">
        <option value="test_1">채팅방1</option>
        <option value="test_2">채팅방2</option>
        <option value="test_3">채팅방3</option>
    </select>
    <br>
    <input id="message" type="text" placeholder="내용">
    <button onClick="sendMessage()">전송</button>
    <div id="chatlog"></div>

    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>
        console.log(window.location)
        const baseUrl = window.location.origin;
        const selectedRoom = document.getElementById('chatroom');
        const inputMessage = document.getElementById('message');
        const chatLog = document.getElementById("chatlog");
        let currentRoom = selectedRoom.value; // 초기 방 설정

        // Socket.IO 클라이언트 연결
        const socket = io();

        // 초기 방 참여
        socket.emit('joinRoom', currentRoom);

        // 선택창 변경 시 방 참여
        selectedRoom.addEventListener('change', function (event) {
            const roomValue = event.target.value;
            socket.emit('leaveRoom', currentRoom); // 현재 방 떠나기
            currentRoom = roomValue;
            socket.emit('joinRoom', currentRoom); // 새로운 방 참여
            chatLog.innerHTML = ''; // 방 변경 시 채팅 로그 초기화
            loadchat(currentRoom);
        });

        // 엔터키
        inputMessage.addEventListener('keypress', function (event) {
            if (event.key === 'Enter' && inputMessage.value) {
                event.preventDefault();
                sendMessage();
            }
        });

        // 메세지 전송
        function sendMessage() {
            const message = inputMessage.value.trim();
            if (message === '') return; // 메시지가 비어있으면 전송하지 않음
            const jsonMessage = { "room": currentRoom, "message": message }; // 방 정보 추가
            socket.emit('message', JSON.stringify(jsonMessage));
            inputMessage.value = '';
        }

        // 메세지 수신
        socket.on('message', (data) => {
            try {
                const receivedData = JSON.parse(data);
                receiveMessage(receivedData);
            } catch (error) {
                console.error("Wrong Format");
            }
        });

        // 기타 기능
        function receiveMessage(data) {
            var newMessage = document.createElement('div');
            newMessage.textContent = `[${data.id}] ${data.message}`;
            chatLog.appendChild(newMessage);
        }
    </script>

    <!-- 여기까지 -->
    <%-include('footer.ejs')%>